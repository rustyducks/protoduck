syntax = "proto3";

package protoduck;
// base

message Pos {
  float x = 1;
  float y = 2;
  float theta = 3;
}

message Speed {
  float vx = 1;
  float vy = 2;
  float vtheta = 3;
}

message MotorsSpeed {
  float v1 = 1;
  float v2 = 2;
  float v3 = 3;
}

message Slip {
  float slip_left = 1;
  float slip_right = 2;
}

// not a speed command! Its the raw commands given to the motor drivers
message MotorsCmd {
  float cmd1 = 1;
  float cmd2 = 2;
  float cmd3 = 3;
}

message MotorPid {
  uint32 motor_no = 1;
  float feedforward = 2;
  float kp = 3;
  float ki = 4;
  float kd = 5;
}

message Bat {
  float voltage = 1;
}

message Resistance {
  float value = 1;
}



// IO

enum ArmID{
  ARM1 = 0;
  ARM2 = 1;
}


message Arm {
  ArmID arm_id = 1;
  float traZ = 2;
  float rotZ = 3;
  float rotY = 4;
  bool pump = 5;
  bool valve = 6;
  float pressure = 7;
}


message Hat {
  float height = 1;
  bool pump = 2;
  bool valve = 3;
  float pressure = 4;
}


message HMI {
  bool color = 1;
  bool tirette = 2;
  bool bouton = 3;
  uint32 led = 4;
  uint32 hmi_display = 5;
}

message Procedure {
  enum Proc {
    // diff
    HOME = 0;
    PUT_ON_STACK = 1;
    TURN_AND_PUT_ON_STACK = 2;
    TAKE_FROM_STACK = 3;
    HALF_UNSTACK = 7;

    // holo
    DROPPER = 4;
    TROMPE = 5;
    LANGUE = 6;
  }
  enum Status{
    SUCCESS = 0;
    RUNNING = 1;
    FAILURE = 2;
    POSITION_UNREACHABLE = 3;
    UNABLE_VACUUM = 4;
    RUNNING_FREE = 5;
  }
  ArmID arm_id = 1;
  Proc proc = 2;
  int32 param = 3;
  Status status = 4;
}


message HexaPos {
  enum HexaType {
    ROCK = 0;
    RED = 1;
    GREEN = 2;
    BLUE = 3;
  }
  HexaType type = 1;
  Pos pos = 2;
}

message HexaPoses {
  repeated HexaPos hexa_poses = 1;
}

message PlayerPos {
  uint32 aruco_id = 1;
  Pos pos = 2;
  Speed speed = 3;
}

message PlayerPoses {
  repeated PlayerPos player_poses = 1;
}

message Error {
  enum Errors {
    STEPPER_DISABLED = 0;
    DYNAMIXEL_ERROR = 1;
    Z_STOP_TRIGGERED = 2;
  }
  Errors error = 1;
  uint32 param = 2;
}


message Message {
  enum MsgType {
    STATUS = 0;
    COMMAND = 1;
  }
  enum Agent {
    DIFF = 0;
    HOLO = 1;
    RASPI = 2;
    MAT = 3;
    PC = 4;
  }
  Agent source = 1;
  MsgType msg_type = 3;
  oneof inner {
    Pos pos = 4;
    Speed speed = 5;
    MotorsSpeed motors_speed = 6;
    MotorsCmd motors_cmd = 7;
    MotorPid motor_pid = 8;
    Bat bat = 9;
    Arm arm = 10;
    Hat hat = 11;
    HMI hmi = 12;
    Procedure procedure = 13;
    HexaPoses hexa_poses = 15;
    PlayerPoses player_poses = 16;
    Slip slip = 17;
    Error error = 18;
    Resistance resistance = 19;
  }
}

